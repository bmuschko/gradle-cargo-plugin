plugins {
    id "groovy"
    id "java-gradle-plugin"
    id "idea"
    id "com.jfrog.bintray" version "1.8.4"
    id "nebula.maven-publish" version "9.4.5"
    id "nebula.ivy-publish" version "9.4.5"
    id "nebula.javadoc-jar" version "9.4.5"
    id "nebula.source-jar" version "9.4.5"
    id "nebula.integtest" version "5.2.1"
    id 'org.ajoberstar.git-publish' version "2.0.0"
}

version = '2.4'

repositories {
    mavenCentral()
}

dependencies {
    compile localGroovy()
    def cargoVersion = '1.6.8'
    compile "org.codehaus.cargo:cargo-daemon-client:$cargoVersion"
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
    testCompile "org.codehaus.cargo:cargo-ant:$cargoVersion"
    testCompile gradleTestKit()
    integTestCompile "io.github.http-builder-ng:http-builder-ng-core:1.0.3"
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Cargo plugin',
                   'Implementation-Version': version,
                   'Built-By': System.getProperty('user.name'),
                   'Built-Date': new Date(),
                   'Built-JDK': System.getProperty('java.version'),
                   'Built-Gradle': gradle.gradleVersion
    }
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    getArchiveClassifier().set("groovydoc")
    from groovydoc.destinationDir
}

artifacts {
    archives groovydocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact groovydocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'Gradle Cargo plugin')
                root.appendNode('description', 'Gradle plugin that provides deployment capabilities to local and remote containers via Cargo.')
                root.appendNode('url', 'https://github.com/bmuschko/gradle-cargo-plugin')
                root.appendNode('inceptionYear', '2011')

                def scm = root.appendNode('scm')
                scm.appendNode('url', 'https://github.com/bmuschko/gradle-cargo-plugin')
                scm.appendNode('connection', 'scm:https://bmuschko@github.com/bmuschko/gradle-cargo-plugin.git')
                scm.appendNode('developerConnection', 'scm:git://github.com/bmuschko/gradle-cargo-plugin.git')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache Software License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')

                def developers = root.appendNode('developers')
                def bmuschko = developers.appendNode('developer')
                bmuschko.appendNode('id', 'bmuschko')
                bmuschko.appendNode('name', 'Benjamin Muschko')
                bmuschko.appendNode('email', 'benjamin.muschko@gmail.com')
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.getProperty('bintrayUser') : null
    key =  project.hasProperty('bintrayKey') ? project.getProperty('bintrayKey') : null
    publications = ['mavenJava']
    publish = true

    pkg {
        repo = 'gradle-plugins'
        name = 'gradle-cargo-plugin'
        licenses = ['Apache-2.0']
    }

    pkg {
        repo = 'gradle-plugins'
        name = 'com.bmuschko:gradle-cargo-plugin'
        desc = 'Gradle plugin that provides deployment capabilities to local and remote containers via Cargo.'
        websiteUrl = "https://github.com/bmuschko/${project.name}"
        issueTrackerUrl = "https://github.com/bmuschko/${project.name}/issues"
        vcsUrl = "https://github.com/bmuschko/${project.name}.git"
        licenses = ['Apache-2.0']
        labels = ['gradle', 'deployment', 'container', 'web', 'ear', 'cargo']
        publicDownloadNumbers = true

        version {
            vcsTag = "v$project.version"
            attributes = ['gradle-plugin': ["com.bmuschko.cargo:${project.group}:${project.name}",
                                            "com.bmuschko.cargo-base:${project.group}:${project.name}"]]

            gpg {
                sign = true
                passphrase = project.hasProperty('gpgPassphrase') ? project.getProperty('gpgPassphrase') : null
            }
        }
    }
}

gitPublish {
    repoUri = 'git@github.com:bmuschko/gradle-cargo-plugin.git'

    branch = 'gh-pages'

    contents {
        from(javadoc.outputs.files) {
            into 'docs/javadoc'
        }
        from(groovydoc.outputs.files) {
            into 'docs/groovydoc'
        }
    }
}
